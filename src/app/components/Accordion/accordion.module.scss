@use "sass:math";
@use "../../styles/conf";
@use "../../styles/conf/fibonacci";
@use "../../styles/mix/color-scheme";

.accordion {
	$-accordion: &;
	position: relative;
	display: flex;
	flex-direction: column;

	&::before {
		content: "";
		position: absolute;
		top: 0;
		bottom: 0;
		background-color: black;
		border: 0.0625rem solid #000;
		border-radius: 100vw;
	}

	@at-root :root:not([dir="rtl"]) & {
		padding-left: 1rem;

		&::before {
			right: 100%;
			display: block;
		}
	}

	@at-root :root[dir="rtl"] & {
		padding-right: 1rem;

		&::before {
			left: 100%;
		}
	}

	&__item {
		display: flex;
		flex-direction: column;

		&:not(:first-of-type) #{$-accordion}__item-padding {
			padding-block-start: 1rem;
		}

		&:not(:last-of-type) {
			position: relative;

			#{$-accordion}__item-padding {
				padding-block-end: 1rem;
			}

			&::after {
				content: "";
				position: absolute;
				bottom: 0;
				border: 1px solid #000;
				border-width: 0 0 math.div(1, 16) + 0rem;
				width: fibonacci.$asymp-xxxl-percentage;
			}
		}

		&:first-of-type {
			#{$-accordion} {
				&__button {
					&::before {
						content: "";
						position: absolute;
						border-width: 0 0.25rem 0;
						border-color: #fff #fff;
						border-style: solid;
						height: 50%;
						top: 0;

						@include color-scheme.dark-and-not-print {
							border-color: #faf3e0;
						}

						@at-root :root:not([dir="rtl"]) & {
							right: calc(100% + 0.875rem);
						}

						@at-root :root[dir="rtl"] & {
							left: calc(100% + 0.875rem);
						}
					}
				}
			}
		}

		&:last-of-type {
			#{$-accordion} {
				&__button {
					&::before {
						content: "";
						position: absolute;
						border-width: 0 0.25rem 0;
						border-color: #fff #fff;
						border-style: solid;
						height: 50%;
						bottom: 0;

						@include color-scheme.dark-and-not-print {
							border-color: #faf3e0;
						}

						@at-root :root:not([dir="rtl"]) & {
							right: calc(100% + 0.875rem);
						}

						@at-root :root[dir="rtl"] & {
							left: calc(100% + 0.875rem);
						}
					}
				}

				&__wrapper {
					&::before {
						content: "";
						position: absolute;
						border-width: 0 0.25rem 0;
						border-color: #fff #fff;
						border-style: solid;
						height: 100%;
						bottom: 0;

						@at-root :root:not([dir="rtl"]) & {
							right: calc(100% + 0.875rem);
						}

						@at-root :root[dir="rtl"] & {
							left: calc(100% + 0.875rem);
						}
					}
				}
			}
		}
	}

	&__header {
		margin: 0;
		font-weight: 500;
	}

	&__button {
		$-btn: &;
		position: relative;
		display: flex;
		flex-direction: column;
		flex-wrap: wrap;
		width: 100%;
		padding: 0;
		background: none;
		font-size: 1rem;
		text-align: start;
		border: 0;
		border-radius: 0;
		overflow-anchor: none;
		color: #000;

		&::after {
			content: "";
			position: absolute;
			top: 50%;
			width: 0.5rem;
			height: 0.5rem;
			background-color: white;
			border-radius: 50%;
			box-shadow: 0 0 0 math.div(2, 16) + 0rem #fff,
				inset 0 0 0 0 + 0rem #000;
			border: math.div(1, 16) + 0rem solid #000;
			transform: translate(50%, -50%);

			@include color-scheme.dark-and-not-print {
				background-color: #faf3e0;
				box-shadow: 0 0 0 math.div(2, 16) + 0rem #faf3e0,
					inset 0 0 0 0 + 0rem #000;
			}

			@media (prefers-reduced-motion: no-preference) {
				transition-property: box-shadow;
				transition-duration: conf.$transition-duration;
				transition-timing-function: conf.$transition-timing-function;
			}

			@at-root :root:not([dir="rtl"]) & {
				right: calc(100% + 1rem + 0.125rem / 2);
			}

			@at-root :root[dir="rtl"] & {
				transform: translate(-50%, -50%);
				left: calc(100% + 1rem + 0.125rem / 2);
			}
		}

		&:not([aria-expanded="true"]) {
			&::after {
				box-shadow: 0 0 0 math.div(2, 16) + 0rem #fff,
					inset 0 0 0 math.div(4, 16) + 0rem #000;

				@include color-scheme.dark-and-not-print {
					box-shadow: 0 0 0 math.div(2, 16) + 0rem #faf3e0,
						inset 0 0 0 math.div(4, 16) + 0rem #000;
				}
			}
		}

		&:focus {
			outline: 0;
		}
	}

	&__body {
		padding: 1rem 0 0;

		> * {
			&:not(script, style) {
				&:first-child #{$-accordion}__item-padding {
					margin-block-start: 0;
				}

				&:last-child #{$-accordion}__item-padding {
					margin-block-end: 0;
				}
			}
		}
	}

	&__wrapper {
		position: relative;
	}

	&__collapse {
		@media (prefers-reduced-motion: no-preference) {
			transition-property: height;
			transition-duration: conf.$transition-duration;
			transition-timing-function: conf.$transition-timing-function;
		}
	}
}
